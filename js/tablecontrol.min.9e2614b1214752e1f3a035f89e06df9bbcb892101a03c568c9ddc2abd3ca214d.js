let table=document.querySelector("#games-table"),instrElem=table.querySelector("div.card-instr"),cards=[],currCard=null,tableControls=document.querySelector("#games-table-controls"),filterMap=new Map,styleProps=["--games-entry-height","--games-entry-name","--games-entry-platform","--games-hr-disp","--games-simp-text"];function getCards(){if(table){if(instrElem){let e=instrElem.firstElementChild;if(e)for(const t of e.children)if(t.nodeName==="INPUT"&&t.type==="radio"){t.checked=!0;break}}let e=table.querySelectorAll("div.card-cont");for(let t of e)cards.push(t),barcodifyCard(t)}}function barcodifyCard(e){let t=null;if(e){let n=e.firstElementChild;if(n)for(let s=0;s<n.children.length;++s){let e=n.children[s];if(e.className.includes("card-cover"))n=e,s=-1;else if(e.className.includes("cover-content"))n=e,s=-1;else if(e.nodeName==="HR"){t=e;break}}}if(t){let s=new Map([["z",0],["q",0],["j",0],["x",0],["k",0],["v",0],["b",0],["p",0],["g",1],["y",1],["f",1],["m",1],["w",1],["c",1],["u",1],["l",1],["d",1],["r",2],["h",2],["s",2],["n",2],["i",2],["o",2],["a",2],["t",2],["e",2],["0",0],["3",0],["6",0],["9",0],["1",1],["4",1],["7",1],["2",2],["5",2],["8",2]]),n=new Map([[0,"❘"],[1,"❙"],[2,"❚"]]),e="",o=t.dataset.name.toLowerCase();for(let t of o){let a=s.get(t),i=n.get(a);i?e+=i:t===" "?e+="‧":e+=n.get(1)}t.dataset.barcode=e}}function getFilters(){let e=document.querySelectorAll("input");for(let t of e)t.name==="card-filter"&&filterMap.set(t.value,t.checked)}function setInitial(){let e=0,t=document.querySelectorAll("input");for(let n of t){if(n.name==="card-sort"&&n.checked){let t=parseInt(n.value);sortCards(t),++e}else n.name==="card-style"&&n.checked&&(updateStyle(n.value),++e);if(e===2)break}for(let e of cards)filterMap.get(e.dataset.platform)||e.classList.add("card-hidden")}function sortCards(e){let t=e%2===0?[-1,1]:[1,-1];for(cards.sort((n,s)=>e===0||e===1?n.dataset.order<s.dataset.order?t[0]:n.dataset.order>s.dataset.order?t[1]:0:e===2||e===3?n.dataset.name<s.dataset.name?t[0]:n.dataset.name>s.dataset.name?t[1]:n.dataset.order<s.dataset.order?t[0]:n.dataset.order>s.dataset.order?t[1]:0:e===4||e===5?n.dataset.platform<s.dataset.platform?t[0]:n.dataset.platform>s.dataset.platform?t[1]:n.dataset.order<s.dataset.order?t[0]:n.dataset.order>s.dataset.order?t[1]:0:0);table.firstChild;)table.removeChild(table.firstChild);instrElem&&table.appendChild(instrElem);for(let e of cards)table.appendChild(e)}function updateStyle(e){const t=document.querySelector(":root");for(let n of styleProps){let s="var("+n+e+")";t.style.setProperty(n,s)}}function dispatchCustomEvent(e,t){const n=new CustomEvent("control-change",{view:window,bubbles:!0,cancelable:!0,detail:t});t.nodeName==="INPUT"&&(t.type==="radio"&&t.checked===!1?(t.checked=!0,e.dispatchEvent(n)):t.type==="checkbox"&&(t.checked=!t.checked,e.dispatchEvent(n)))}function handleChange(e){switch(e.name){case"card-sort":let t=parseInt(e.value);sortCards(t);break;case"card-style":updateStyle(e.value);break;case"card-filter":for(let t of cards)t.dataset.platform===e.value&&(e.checked?t.classList.remove("card-hidden"):t.classList.add("card-hidden"));filterMap[e.value]=e.checked;break;default:break}}function registerCallbacks(){tableControls&&(tableControls.classList.remove("controls-nojs"),tableControls.addEventListener("click",e=>{e.target&&e.target.nodeName==="LABEL"&&(e.preventDefault(),dispatchCustomEvent(tableControls,e.target.control))}),tableControls.addEventListener("control-change",e=>{handleChange(e.detail)}),tableControls.addEventListener("change",e=>{handleChange(e.target)}))}getCards(),getFilters(),setInitial(),registerCallbacks()